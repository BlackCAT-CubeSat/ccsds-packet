searchState.loadedDescShard("ccsds_packet", 0, "A cFS-flavor CCSDS command packet, as a Rust structure.\nA cFS-flavor CCSDS telemetry packet, as a Rust structure.\nReturns a view of the <code>Command</code> as a sequence of bytes, …\nReturns a view of the <code>Telemetry</code> as a sequence of bytes, …\nTakes a <code>str</code> or <code>String</code> and uses it to populate an array of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nTurns a sequence of bytes representing a message into a …\nTurns a sequence of bytes representing a message into a …\nReturns the message’s command code.\nIncrement the message’s sequence number.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the message’s message ID.\nReturns the message’s message ID.\nIf <code>msg_id</code> and <code>function_code</code> are a permissible message ID …\nIf <code>msg_id</code> is a permissible message ID, returns a new …\n<code>Self::new</code>, but using <code>Default::default</code><code>()</code> as the payload.\n<code>Self::new</code>, but using <code>Default::default</code><code>()</code> as the payload.\nThe message’s payload. As messages are copied …\nThe message’s payload. As messages are copied …\nReturns the message’s sequence number.\nIf <code>function_code</code> is a valid command code, sets the message…\nIf <code>msg_id</code> is a valid message ID, sets the message’s …\nIf <code>msg_id</code> is a valid message ID, uses it to set the message…\nSets the message’s timestamp to <code>seconds</code> seconds + …\nReturns the message’s timestamp as a tuple of (seconds …\nSets the message’s timestamp to the current time.")